{"ast":null,"code":"var _jsxFileName = \"/Users/muhammadumar/Desktop/Projects/my-portfolio/src/containers/projects/Projects.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext, Suspense, lazy } from \"react\";\nimport \"./Project.scss\";\nimport Button from \"../../components/button/Button\";\nimport { openSource, socialMediaLinks } from \"../../portfolio\";\nimport StyleContext from \"../../contexts/StyleContext\";\nimport Loading from \"../../containers/loading/Loading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Projects() {\n  _s();\n\n  const GithubRepoCard = /*#__PURE__*/lazy(() => import(\"../../components/githubRepoCard/GithubRepoCard\"));\n\n  const FailedLoading = () => null;\n\n  const renderLoader = () => /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 30\n  }, this);\n\n  const [repo, setrepo] = useState([]); // todo: remove useContex because is not supported\n\n  const {\n    isDark\n  } = useContext(StyleContext);\n  useEffect(() => {\n    const getRepoData = () => {\n      fetch(\"/profile.json\").then(result => {\n        if (result.ok) {\n          return result.json();\n        }\n\n        throw result;\n      }).then(response => {\n        setrepoFunction(response.data.user.pinnedItems.edges);\n      }).catch(function (error) {\n        console.error(`${error} (because of this error, nothing is shown in place of Projects section. Also check if Projects section has been configured)`);\n        setrepoFunction(\"Error\");\n      });\n    };\n\n    getRepoData();\n  }, []);\n\n  function setrepoFunction(array) {\n    setrepo(array);\n  }\n\n  if (!(typeof repo === \"string\" || repo instanceof String) && openSource.display) {\n    return /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: renderLoader(),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main\",\n        id: \"opensource\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"project-title\",\n          children: \"Open Source Projects\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"repo-cards-div-main\",\n          children: repo.map((v, i) => {\n            if (!v) {\n              console.error(`Github Object for repository number : ${i} is undefined`);\n            }\n\n            return /*#__PURE__*/_jsxDEV(GithubRepoCard, {\n              repo: v,\n              isDark: isDark\n            }, v.node.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          text: \"More Projects\",\n          className: \"project-button\",\n          href: socialMediaLinks.github,\n          newTab: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(FailedLoading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 12\n    }, this);\n  }\n}\n\n_s(Projects, \"lT+iXSl3jHxqvN1+E3F7GZv1nqo=\");\n\n_c = Projects;\n\nvar _c;\n\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"sources":["/Users/muhammadumar/Desktop/Projects/my-portfolio/src/containers/projects/Projects.js"],"names":["React","useState","useEffect","useContext","Suspense","lazy","Button","openSource","socialMediaLinks","StyleContext","Loading","Projects","GithubRepoCard","FailedLoading","renderLoader","repo","setrepo","isDark","getRepoData","fetch","then","result","ok","json","response","setrepoFunction","data","user","pinnedItems","edges","catch","error","console","array","String","display","map","v","i","node","id","github"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useContext, Suspense, lazy} from \"react\";\nimport \"./Project.scss\";\nimport Button from \"../../components/button/Button\";\nimport {openSource, socialMediaLinks} from \"../../portfolio\";\nimport StyleContext from \"../../contexts/StyleContext\";\nimport Loading from \"../../containers/loading/Loading\";\nexport default function Projects() {\n  const GithubRepoCard = lazy(() =>\n    import(\"../../components/githubRepoCard/GithubRepoCard\")\n  );\n  const FailedLoading = () => null;\n  const renderLoader = () => <Loading />;\n  const [repo, setrepo] = useState([]);\n  // todo: remove useContex because is not supported\n  const {isDark} = useContext(StyleContext);\n\n  useEffect(() => {\n    const getRepoData = () => {\n      fetch(\"/profile.json\")\n        .then(result => {\n          if (result.ok) {\n            return result.json();\n          }\n          throw result;\n        })\n        .then(response => {\n          setrepoFunction(response.data.user.pinnedItems.edges);\n        })\n        .catch(function (error) {\n          console.error(\n            `${error} (because of this error, nothing is shown in place of Projects section. Also check if Projects section has been configured)`\n          );\n          setrepoFunction(\"Error\");\n        });\n    };\n    getRepoData();\n  }, []);\n\n  function setrepoFunction(array) {\n    setrepo(array);\n  }\n  if (\n    !(typeof repo === \"string\" || repo instanceof String) &&\n    openSource.display\n  ) {\n    return (\n      <Suspense fallback={renderLoader()}>\n        <div className=\"main\" id=\"opensource\">\n          <h1 className=\"project-title\">Open Source Projects</h1>\n          <div className=\"repo-cards-div-main\">\n            {repo.map((v, i) => {\n              if (!v) {\n                console.error(\n                  `Github Object for repository number : ${i} is undefined`\n                );\n              }\n              return (\n                <GithubRepoCard repo={v} key={v.node.id} isDark={isDark} />\n              );\n            })}\n          </div>\n          <Button\n            text={\"More Projects\"}\n            className=\"project-button\"\n            href={socialMediaLinks.github}\n            newTab={true}\n          />\n        </div>\n      </Suspense>\n    );\n  } else {\n    return <FailedLoading />;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}