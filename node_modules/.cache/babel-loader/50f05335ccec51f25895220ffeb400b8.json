{"ast":null,"code":"import React from\"react\";import\"./AchievementCard.scss\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function AchievementCard(_ref){var cardInfo=_ref.cardInfo,isDark=_ref.isDark;function openUrlInNewTab(url,name){if(!url){console.log(\"URL for \".concat(name,\" not found\"));return;}var win=window.open(url,\"_blank\");win.focus();}return/*#__PURE__*/_jsxs(\"div\",{className:isDark?\"dark-mode certificate-card\":\"certificate-card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"certificate-image-div\",children:/*#__PURE__*/_jsx(\"img\",{src:cardInfo.image,alt:\"PWA\",className:\"card-image\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"certificate-detail-div\",children:[/*#__PURE__*/_jsx(\"h5\",{className:isDark?\"dark-mode card-title\":\"card-title\",children:cardInfo.title}),/*#__PURE__*/_jsx(\"p\",{className:isDark?\"dark-mode card-subtitle\":\"card-subtitle\",children:cardInfo.description})]}),/*#__PURE__*/_jsx(\"div\",{className:\"certificate-card-footer\",children:cardInfo.footer.map(function(v,i){return/*#__PURE__*/_jsx(\"span\",{className:isDark?\"dark-mode certificate-tag\":\"certificate-tag\",onClick:function onClick(){return openUrlInNewTab(v.url,v.name);},children:v.name},i);})})]});}","map":{"version":3,"sources":["/Users/muhammadumar/Desktop/Projects/my-portfolio/src/components/achievementCard/AchievementCard.js"],"names":["React","AchievementCard","cardInfo","isDark","openUrlInNewTab","url","name","console","log","win","window","open","focus","image","title","description","footer","map","v","i"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,wBAAP,C,wFAEA,cAAe,SAASC,CAAAA,eAAT,MAA6C,IAAnBC,CAAAA,QAAmB,MAAnBA,QAAmB,CAATC,MAAS,MAATA,MAAS,CAC1D,QAASC,CAAAA,eAAT,CAAyBC,GAAzB,CAA8BC,IAA9B,CAAoC,CAClC,GAAI,CAACD,GAAL,CAAU,CACRE,OAAO,CAACC,GAAR,mBAAuBF,IAAvB,gBACA,OACD,CACD,GAAIG,CAAAA,GAAG,CAAGC,MAAM,CAACC,IAAP,CAAYN,GAAZ,CAAiB,QAAjB,CAAV,CACAI,GAAG,CAACG,KAAJ,GACD,CAED,mBACE,aAAK,SAAS,CAAET,MAAM,CAAG,4BAAH,CAAkC,kBAAxD,wBACE,YAAK,SAAS,CAAC,uBAAf,uBACE,YAAK,GAAG,CAAED,QAAQ,CAACW,KAAnB,CAA0B,GAAG,CAAC,KAA9B,CAAoC,SAAS,CAAC,YAA9C,EADF,EADF,cAIE,aAAK,SAAS,CAAC,wBAAf,wBACE,WAAI,SAAS,CAAEV,MAAM,CAAG,sBAAH,CAA4B,YAAjD,UACGD,QAAQ,CAACY,KADZ,EADF,cAIE,UAAG,SAAS,CAAEX,MAAM,CAAG,yBAAH,CAA+B,eAAnD,UACGD,QAAQ,CAACa,WADZ,EAJF,GAJF,cAYE,YAAK,SAAS,CAAC,yBAAf,UACGb,QAAQ,CAACc,MAAT,CAAgBC,GAAhB,CAAoB,SAACC,CAAD,CAAIC,CAAJ,CAAU,CAC7B,mBACE,aAEE,SAAS,CACPhB,MAAM,CAAG,2BAAH,CAAiC,iBAH3C,CAKE,OAAO,CAAE,yBAAMC,CAAAA,eAAe,CAACc,CAAC,CAACb,GAAH,CAAQa,CAAC,CAACZ,IAAV,CAArB,EALX,UAOGY,CAAC,CAACZ,IAPL,EACOa,CADP,CADF,CAWD,CAZA,CADH,EAZF,GADF,CA8BD","sourcesContent":["import React from \"react\";\nimport \"./AchievementCard.scss\";\n\nexport default function AchievementCard({cardInfo, isDark}) {\n  function openUrlInNewTab(url, name) {\n    if (!url) {\n      console.log(`URL for ${name} not found`);\n      return;\n    }\n    var win = window.open(url, \"_blank\");\n    win.focus();\n  }\n\n  return (\n    <div className={isDark ? \"dark-mode certificate-card\" : \"certificate-card\"}>\n      <div className=\"certificate-image-div\">\n        <img src={cardInfo.image} alt=\"PWA\" className=\"card-image\"></img>\n      </div>\n      <div className=\"certificate-detail-div\">\n        <h5 className={isDark ? \"dark-mode card-title\" : \"card-title\"}>\n          {cardInfo.title}\n        </h5>\n        <p className={isDark ? \"dark-mode card-subtitle\" : \"card-subtitle\"}>\n          {cardInfo.description}\n        </p>\n      </div>\n      <div className=\"certificate-card-footer\">\n        {cardInfo.footer.map((v, i) => {\n          return (\n            <span\n              key={i}\n              className={\n                isDark ? \"dark-mode certificate-tag\" : \"certificate-tag\"\n              }\n              onClick={() => openUrlInNewTab(v.url, v.name)}\n            >\n              {v.name}\n            </span>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}